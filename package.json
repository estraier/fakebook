{
  "name": "stgy",
  "version": "1.0.0",
  "private": true,
  "workspaces": [
    "packages/*",
    "backend",
    "frontend"
  ],
  "scripts": {
    "docker:init": "bash -lc 'ids=$(docker ps -aq); [ -n \"$ids\" ] && docker rm -f $ids; docker system prune -a --volumes -f; (docker buildx version >/dev/null 2>&1 && docker buildx prune -a -f || true)'",
    "docker:reset": "docker-compose down -v --rmi all --remove-orphans && docker-compose build --no-cache && docker-compose create",
    "docker:build": "docker-compose build",
    "docker:destroy": "docker-compose down -v --rmi all --remove-orphans",
    "docker:create": "docker-compose create",
    "docker:remove": "docker-compose rm -f",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:start": "docker-compose start",
    "docker:stop": "docker-compose stop",
    "docker:restart": "docker-compose down ; docker-compose up -d",
    "docker:start-dev": "npm run docker:stop && docker-compose up -d db minio redis smtp caddy",
    "packages:build": "npm run build --workspace packages/markdown",
    "packages:test": "npm run test --workspace packages/markdown",
    "packages:fmt": "npm run fmt --workspace packages/markdown",
    "packages:lint": "npm run lint --workspace packages/markdown",
    "packages:clean": "npm run clean --workspace packages/markdown",
    "backend:build": "npm run build --workspace backend",
    "backend:start": "npm run start --workspace backend",
    "backend:check": "npm run check --workspace backend",
    "backend:dev": "npm run dev --workspace backend",
    "backend:mail-worker": "npm run mail-worker --workspace backend",
    "backend:media-worker": "npm run media-worker --workspace backend",
    "backend:notification-worker": "npm run notification-worker --workspace backend",
    "backend:database-util": "npm run database-util --workspace backend",
    "backend:storage-util": "npm run storage-util --workspace backend",
    "backend:test": "npm run test --workspace backend",
    "backend:fmt": "npm run fmt --workspace backend",
    "backend:lint": "npm run lint --workspace backend",
    "backend:clean": "npm run clean --workspace backend",
    "frontend:build": "npm run build --workspace frontend",
    "frontend:start": "npm run start --workspace frontend",
    "frontend:dev": "npm run dev --workspace frontend",
    "frontend:test": "npm run test --workspace frontend",
    "frontend:fmt": "npm run fmt --workspace frontend",
    "frontend:lint": "npm run lint --workspace frontend",
    "frontend:clean": "npm run clean --workspace frontend",
    "build": "npm run build --workspaces",
    "pretest": "npm run packages:build",
    "test": "npm run test --workspaces",
    "fmt": "npm run fmt --workspaces",
    "lint": "npm run lint --workspaces",
    "clean": "npm run clean --workspaces && rm -rf node_modules dist && find . -name '*~' -type f -delete",
    "reinstall": "rm -f package-lock.json && npm run clean && npm cache clean --force && npm install",
    "log:backend": "docker-compose logs backend",
    "log:frontend": "docker-compose logs frontend",
    "log:db": "docker-compose logs db",
    "log:minio": "docker-compose logs minio",
    "reset-data": "./scripts/reset-data.sh && ./scripts/reset-minio-data.sh && ./scripts/edit_users.py seeder/user-0*.txt && ./scripts/edit_posts.py seeder/post-0*.txt && ./scripts/user_actions.py seeder/action-*.txt",
    "reset-data-test": "npm run reset-data && ./scripts/make_volume_test.py",
    "reset-cache": "./scripts/reset-cache.sh",
    "endpoint-test": "./tests/endpoint_test.py",
    "psql": "docker-compose exec db psql -U stgy stgy"
  }
}
